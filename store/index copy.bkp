import Vuex from 'vuex'

// Why do we create function instead of class for the store??
// Because it needs to be callable by  Nuxt.js
const createStore = () => {
  // now we return a function of Store instead of an object
  // If you return an object instead of a function then this Vuex Store instance
  //  will be shared by ALL USERS of our WEBAPP

  // WIth this function return every user will get their own instance of Vuex Store
  return new Vuex.Store({
    state: {
      loadedPosts: []
    },
    mutations: {
      setPosts (state, posts) {
        state.loadedPosts = posts
      }
    },
    action: {
      // posts is the payload usually from the "component" when this action was called
      //  or could be a payload from another action dispatching this current action method
      setPosts ({ commit }, posts) {
        commit('setPosts', posts)
      }
    },
    getter: {
      loadedPosts (state) {
        return state.loadedPosts
      }
    }
  })
}

export default createStore
